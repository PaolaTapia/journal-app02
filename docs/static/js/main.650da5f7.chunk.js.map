{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","loadNotes","a","collection","get","noteSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newFormState","handledInputChange","target","value","NotesAppBar","useDispatch","useSelector","className","style","display","onChange","e","files","text","showConfirmButton","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","console","log","message","startLogout","signOut","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","newNote","Date","getTime","add","JournalScreen","LoginScreen","handleInputChange","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.650da5f7.chunk.js","sourcesContent":["export const types={\r\n     login: '[Auth] Login', \r\n     logout: '[Auth] Logout', \r\n     \r\n     uiSetError: '[UI] set Error',\r\n     uiRemoveError: '[UI] Remove Error',\r\n\r\n     uiStartLoading: '[UI] Start loading',\r\n     uiFinishLoading: '[UI] Finish loading',\r\n\r\n     notesAddNew: '[Notes] New note', \r\n     notesActive: '[Notes] Set active note', \r\n     notesLoad: '[Notes] Load notes', \r\n     notesUpdated: '[Notes] Update note saved',\r\n     notesFileUrl:  '[Notes] Update image url',\r\n     notesDelete:  '[Notes] Delete note',\r\n     notesLogoutCleaning:  '[Notes] Logout Cleaning',\r\n\r\n\r\n}","/*//state de las notas\r\n{\r\n     notes: [], \r\n     active: null,\r\n     active: {\r\n          id: 'KASLIRKRLF', \r\n          title:  '', \r\n          body: '',  \r\n          imageUrl:  '', \r\n          date: 12321          \r\n     }\r\n} */\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n     notes: [],\r\n     active: null\r\n}\r\nexport const notesReducer = (state=initialState , action) => {\r\n     switch (action.type) {\r\n          case types.notesAddNew: \r\n               return{\r\n                    notes: [action.payload, ...state.notes]\r\n               }\r\n          case types.notesActive:\r\n               return {\r\n                    ...state,\r\n                    active: {\r\n                         ...action.payload\r\n                    }\r\n               }\r\n          case types.notesLoad: \r\n               //console.log(action.payload)               \r\n               return {                    \r\n                    ...state, \r\n                    notes: [\r\n                          ...action.payload\r\n                         ]\r\n               }  \r\n          case types.notesUpdated: \r\n               return {                    \r\n                    ...state, \r\n                    notes:                     \r\n                        state.notes.map(\r\n                              note => note.id === action.payload.id\r\n                              ? action.payload.note: note\r\n                         )\r\n                    \r\n               }           \r\n          case types.notesDelete:\r\n                 \r\n               return {                    \r\n                    ...state, \r\n                    active: null, \r\n                    notes: state.notes.filter(note => note.id !== action.payload)\r\n               } \r\n          case types.notesLogoutCleaning: \r\n               return{\r\n                    ...state, \r\n                    active: null, \r\n                    notes: []\r\n               }\r\n          default:\r\n               return state;\r\n     }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n     loading: false, \r\n     msgError: null\r\n}\r\n\r\nexport const uiReducer = (state= initialState, action) => {\r\n     switch (action.type) {\r\n          case types.uiSetError:\r\n               return {\r\n                    ...state,\r\n                    msgError: action.payload\r\n               }\r\n          case types.uiRemoveError:\r\n                    return {\r\n                         ...state,\r\n                         msgError: null\r\n                    }\r\n          case types.uiStartLoading: \r\n               return{\r\n                    ...state, \r\n                    loading: true\r\n               }\r\n          case types.uiFinishLoading: \r\n               return{\r\n                    ...state, \r\n                    loading: false\r\n               }\r\n     \r\n          default:\r\n               return state;\r\n     }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'; \r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers=combineReducers({\r\n     auth:authReducer,\r\n     ui: uiReducer,\r\n     notes: notesReducer\r\n}); \r\n\r\nexport const store= createStore(\r\n     reducers,\r\n     composeEnhancers(\r\n          applyMiddleware(thunk)\r\n     )\r\n//      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n); ","/*\r\n{\r\n     uid: 'DAÑLKJDFOPIJENV', \r\n     name: 'Fernando', \r\n     dir: { b: 12}\r\n}\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer=(state={}, action)=>{\r\n\r\n     switch (action.type) {\r\n          case types.login:\r\n               return{\r\n                   uid: action.payload.uid, \r\n                   name: action.payload.displayName \r\n               }\r\n          case types.logout: \r\n                return{}             \r\n     \r\n          default:\r\n               return state;\r\n     }\r\n}","import firebase from 'firebase/app'; \r\nimport 'firebase/firestore'; \r\nimport 'firebase/auth'; \r\n\r\nconst firebaseConfig = {\r\n     apiKey: \"AIzaSyAui4BunSA5KW3-F6xC8FA-STiOA6p-QLg\",\r\n     authDomain: \"react-app-demos.firebaseapp.com\",\r\n     databaseURL: \"https://react-app-demos.firebaseio.com\",\r\n     projectId: \"react-app-demos\",\r\n     storageBucket: \"react-app-demos.appspot.com\",\r\n     messagingSenderId: \"658327330118\",\r\n     appId: \"1:658327330118:web:c35bd775560210730a5947\"\r\n   };\r\n   firebase.initializeApp(firebaseConfig);\r\n\r\n   const db=firebase.firestore(); \r\n   const googleAuthProvider= new firebase.auth.GoogleAuthProvider(); \r\n\r\n   export {\r\n        db,\r\n        googleAuthProvider, \r\n        firebase\r\n\r\n   }","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid)=> {\r\n     const noteSnap = await db.collection(`${uid}/journal/notes`).get(); \r\n\r\n     const notes = []; \r\n     //const notes = new Array();\r\n     \r\n     noteSnap.forEach(snapHijo => {\r\n          notes.push({\r\n               id: snapHijo.id, \r\n               ...snapHijo.data()\r\n          })\r\n     });\r\n      \r\n     //console.log((notes));     \r\n     return notes;      \r\n}","\r\nexport const fileUpload = async(file)=>{\r\n    \r\n     const cloudUrl='https://api.cloudinary.com/v1_1/dkg7moxuk/upload'; \r\n     \r\n     const formData = new FormData(); \r\n     formData.append('upload_preset', 'react-journal'); \r\n     formData.append('file', file); \r\n     \r\n     try{\r\n          const resp = await fetch (cloudUrl, {\r\n               method: 'POST',\r\n               body: formData\r\n          });\r\n          if(resp.ok) {\r\n               const cloudResp= await resp.json(); \r\n               return cloudResp.secure_url; \r\n          }else {\r\n               //error de cloudinary\r\n               throw await resp.json(); \r\n          }\r\n     }catch(err) {\r\n          //ej. la url no existe\r\n          throw err; \r\n     }\r\n\r\n}","import Swal from 'sweetalert2'; \r\nimport {db} from '../firebase/firebase-config'; \r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { types } from '../types/types';\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = ()=> {\r\n     return async (dispatch, getState )=> {\r\n          const {uid}= getState().auth; \r\n          \r\n          const newNote = {\r\n               title: '', \r\n               body: '', \r\n               url:'',\r\n               date: new Date().getTime(), \r\n          }\r\n          \r\n          //docRef\r\n          const doc= await db.collection(`${uid}/journal/notes`).add(newNote); \r\n          dispatch(activeNote(doc.id, newNote));\r\n          //dispatch(startLoadingNotes(uid));\r\n          dispatch(addNewNote(doc.id, newNote));\r\n     }\r\n}\r\n\r\nexport const activeNote = (id, note)=> ({\r\n     type: types.notesActive, \r\n     payload: {\r\n          id, \r\n          ...note\r\n     }\r\n}); \r\n\r\nexport const addNewNote=(id, note)=>({\r\n     type: types.notesAddNew, \r\n     payload: {\r\n          id, \r\n          ...note\r\n     }\r\n})\r\n\r\nexport const startLoadingNotes=(uid)=>{\r\n     return async (dispatch)=>{\r\n          const notes= await loadNotes(uid);\r\n             dispatch(setNotes(notes)); \r\n     }\r\n}\r\n\r\nexport const setNotes = (notes) =>({\r\n    type: types.notesLoad, \r\n    payload: notes \r\n}); \r\n\r\nexport const startSaveNote = (note) => {\r\n    \r\n     return async( dispatch, getState) => {\r\n\r\n          const {uid} = getState().auth; \r\n          //si no viene el url borra el url\r\n          if(!note.url) {\r\n               delete note.url; \r\n          }\r\n          const noteToFirestore= {...note}; \r\n          delete noteToFirestore.id; \r\n        \r\n          await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore); \r\n          //Actualiza la página, no solo lo que cambió\r\n          //dispatch(startLoadingNotes(uid));          \r\n          dispatch(refreshNote(note.id, note)); \r\n          Swal.fire('Saved', note.title, 'success' )\r\n     }     \r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n     type: types.notesUpdated, \r\n     payload: {\r\n          id, \r\n          note\r\n          //: id,  ...note\r\n     }\r\n})\r\n\r\nexport const startUploading = (file)=> {\r\n     return async (dispatch, getState) => {\r\n          const { active: activeNote }= getState().notes; \r\n\r\n          Swal.fire({\r\n               title: 'Uploading...', \r\n               text: 'Please wait...',\r\n               showConfirmButton: false,allowOutsideClick: false,\r\n               willOpen: () => {\r\n                    Swal.showLoading(); \r\n               }\r\n          })\r\n          \r\n          const fileUrl= await fileUpload(file);           \r\n          activeNote.url=fileUrl; \r\n          dispatch(startSaveNote(activeNote)) \r\n\r\n          Swal.close(); \r\n     }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n     return async (dispatch, getState ) => {\r\n        const uid=getState().auth.uid;        \r\n        await db.doc(`${uid}/journal/notes/${id}`).delete(); \r\n        //console.log(id);\r\n        dispatch(deleteNote(id));  \r\n\r\n        //[VER]  \r\n        //dispatch(startLoadingNotes(uid));        \r\n     }\r\n}\r\n\r\nexport const deleteNote=(id)=>({\r\n     type: types.notesDelete,\r\n     payload: id\r\n     \r\n})\r\n\r\n\r\nexport const noteLogout=()=>({\r\n     type: types.notesLogoutCleaning      \r\n})\r\n","import { useState } from \"react\"; \r\n\r\n//recibe un objeto, las propiedades son un campo de un formulario\r\n\r\nexport const useForm = (initialState={}) => {\r\n\r\n     //Aquí podría mandar datos de validación\r\n    \r\n     const [values, setValues] = useState(initialState); \r\n\r\n     const reset =(newFormState = initialState)=> {          \r\n          setValues(newFormState); \r\n     }\r\n\r\n     const handledInputChange= ({target})=>{     \r\n          setValues({\r\n               ...values, \r\n               [target.name]: target.value\r\n          });           \r\n     }\r\n\r\n     return [values, handledInputChange, reset]; \r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n     const dispatch = useDispatch();\r\n     const {active} = useSelector(state=>state.notes);   \r\n\r\n     const handleSave = () => {\r\n          dispatch(startSaveNote(active));\r\n     }\r\n\r\n     const handlePicture = () => {\r\n          document.querySelector('#fileSelector').click()\r\n     }\r\n\r\n     const handleFileChange = (e) => {    \r\n          const file=e.target.files[0]; \r\n          if(file) {\r\n               dispatch(startUploading(file)); \r\n               //console.log(file); \r\n          }\r\n     }\r\n\r\n     return (\r\n          <div className=\"notes__appbar\">\r\n               <span>28 de agostos de 2020</span>\r\n              \r\n              <input\r\n                    type=\"file\"\r\n                    id= \"fileSelector\"\r\n                    name=\"file\"\r\n                    style={{ display: 'none'}}\r\n                    onChange={ handleFileChange}\r\n               />\r\n               <div>\r\n                    <button \r\n                         className=\"btn\"\r\n                         onClick={handlePicture}\r\n                    >\r\n                         Picture\r\n                    </button>\r\n\r\n                    <button \r\n                         className=\"btn\"\r\n                         onClick={handleSave}\r\n                    >\r\n                         Save\r\n                    </button>\r\n\r\n               </div>\r\n               \r\n          </div>\r\n     )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n      const dispatch = useDispatch();\r\n\r\n     const {active: note} = useSelector (state => state.notes);\r\n     //console.log(note); \r\n     const [formValues, handledInputChange,reset]=useForm(note);\r\n     //console.log(formValues);     \r\n     const {body, title, id}= formValues; \r\n\r\n     const activeId= useRef(note.id);\r\n\r\n     useEffect(() => {     \r\n          if(note.id !== activeId.current) {\r\n               reset (note) ; \r\n               activeId.current=note.id; \r\n          }\r\n     }, [note, reset])\r\n\r\n     useEffect(() => {\r\n        dispatch(activeNote(formValues.id, {...formValues})); \r\n     }, [formValues,dispatch])\r\n\r\n     const handleDelete = () => {\r\n         dispatch(startDeleting(id));  \r\n     }\r\n\r\n     return (\r\n          <div className=\"notes_main-content\">\r\n               <NotesAppBar/>\r\n               <div className=\"notes_content\" >\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    name=\"title\"\r\n                    onChange={handledInputChange}\r\n                    />\r\n\r\n                    <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes_textarea\"\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handledInputChange}\r\n                    ></textarea>\r\n\r\n                    {\r\n                         (note.url)\r\n                         &&(\r\n                              <div className=\"notes_image\">\r\n                                   <img \r\n                                   src={note.url}\r\n                                   alt=\"imagen\"\r\n                                   />\r\n                              </div>\r\n                         )\r\n                    }\r\n               </div>\r\n               <button\r\n                    className=\"btn btn-danger\"  \r\n                    onClick={handleDelete}\r\n               >Delete </button>\r\n          </div>\r\n     )\r\n}\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n     return (\r\n          <div className=\"nothing__main-content\">\r\n               <p>NothingSelected\r\n                    <br/>\r\n                    or create an entry! \r\n               </p>\r\n               <i className=\"far fa-star fa-4x mt-5\"></i>\r\n          </div>\r\n     )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError=(err)=>({\r\n     type: types.uiSetError, \r\n     payload: err\r\n}); \r\n\r\nexport const removeError=()=>({\r\n     type: types.uiRemoveError \r\n     \r\n}); \r\nexport const startLoading=()=>({\r\n     type: types.uiStartLoading\r\n     \r\n}); \r\nexport const finishLoading=()=>({\r\n     type: types.uiFinishLoading     \r\n}); \r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'; \r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\n//una accion\r\nexport const startLoginEmailPassword=(email, password) =>{\r\n     return (dispatch) => {\r\n\r\n          dispatch(startLoading());  \r\n          \r\n          firebase.auth().signInWithEmailAndPassword(email, password)\r\n          .then(({user})=>{\r\n               dispatch(\r\n                    login(user.uid, user.displayName)                 \r\n               ); \r\n               dispatch(finishLoading());  \r\n          })\r\n          .catch(e=> {\r\n               console.log(e); \r\n               dispatch(finishLoading());  \r\n               Swal.fire('Error', e.message, 'error');\r\n          })          \r\n          //dispatch(login (email,password));\r\n          \r\n     }     \r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName=(email, password,name)=> {\r\nreturn(dispatch) =>{\r\n     firebase.auth().createUserWithEmailAndPassword(email, password)\r\n     .then(async({user})=>{\r\n          await user.updateProfile({displayName: name}); \r\n          console.log(user);          \r\n          dispatch(\r\n               login(user.uid, user.displayName) \r\n          ); \r\n     })\r\n     .catch(e=> {\r\n          console.log(e);\r\n          Swal.fire('Error', e.message, 'error');\r\n     })\r\n} \r\n}\r\n\r\n//otra accion\r\nexport const startGoogleLogin =()=>{\r\n     return (dispatch) => {\r\n          firebase.auth().signInWithPopup(googleAuthProvider)\r\n          .then(({user})=>{\r\n               dispatch(\r\n                    login(user.uid, user.displayName)\r\n               )\r\n          }); \r\n     }\r\n}\r\n\r\nexport const login=(uid, displayName) => ({\r\n     type: types.login, \r\n     payload: {\r\n          uid,\r\n          displayName\r\n     }\r\n})\r\n\r\nexport const startLogout = () => {\r\n     return(dispatch) => {\r\n          firebase.auth().signOut(); \r\n          dispatch(noteLogout());\r\n          dispatch(logout());\r\n     }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => ({\r\n     type: types.logout\r\n})","import { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nimport React from \"react\";\r\nimport moment from 'moment';\r\n\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n  const noteDate= moment(date); \r\n  //console.log(noteDate); \r\n  const dispatch = useDispatch(); \r\n\r\n  const handleEntryClick =()=> {\r\n    dispatch (\r\n      activeNote (id,\r\n        {\r\n          date,title,body,url\r\n        })\r\n      );\r\n  }\r\n\r\n //console.log(id,date,title,body,url);\r\n  return (\r\n    <div \r\n      className=\"journal__entry\"\r\n      onClick={handleEntryClick}\r\n    >\r\n      {url&&\r\n      <div\r\n        className=\"journal__entry-picture\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage:`url(${url})`,\r\n        }}\r\n      > \r\n      </div>\r\n      }\r\n      <div className=\"journal__entry-body\">\r\n    <p className=\"journal__entry-title\">{title}</p>\r\n          <p className=\"journal__entry-content\r\n           animate__animated animate__fadeIn animate_faster\">\r\n          {body}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"journal__entry-date-box\">\r\n        <span>{noteDate.format('dddd')}</span>\r\n          <h4>{noteDate.format('Do')}</h4>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'; \r\nimport { useSelector } from 'react-redux'; \r\n\r\nimport { JournalEntry } from './JournalEntry'; \r\n\r\nexport const JournalEntries = () => {    \r\n     \r\n    const {notes} = useSelector( state => state.notes);  \r\n   \r\n     return (                   \r\n          <div className=\"journal__entries\">\r\n               { \r\n               //notes&& \r\n               \r\n     //Object.values(notes).map( note => (\r\n        \r\n               notes&&\r\n               notes.map( note =>(\r\n                    <JournalEntry  \r\n                     key = { note.id }\r\n                     { ...note}               \r\n                    /> \r\n                ))       \r\n               }\r\n               \r\n          </div>\r\n          \r\n     )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n      const dispatch = useDispatch();\r\n      const {name}= useSelector(state=>state.auth); \r\n      //console.log(name); \r\n\r\n      const hanldeLogout = () => {\r\n       dispatch(startLogout()); \r\n      }\r\n\r\n     const handleAddNew = ()=>{\r\n      dispatch(startNewNote()); \r\n     }\r\n\r\n    // const {notes} = useSelector (state=> state.notes);\r\n\r\n     return (\r\n          <aside className=\"journal__sidebar\">\r\n          <div className=\"journal_sidebar-navbar\">\r\n               <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n               </h3>\r\n          <button \r\n               className=\"btn\"\r\n               onClick={hanldeLogout}\r\n          >Logout</button>\r\n          </div>   \r\n          <div \r\n               className=\"journal__new-entry\"\r\n               onClick={handleAddNew}     \r\n          >\r\n               <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n               <p>New Entry</p>\r\n          </div>   \r\n               {/*\r\n                   (notes)\r\n                   ?(<JournalEntries notes={notes}/>)\r\n                   :('')\r\n               */}\r\n               <JournalEntries />\r\n          </aside>\r\n     )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { notesReducer } from '../../reducers/notesReducer';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\nconst {active} = useSelector(state => state.notes)\r\n\r\n     return (\r\n          <div className=\"journal__main-content animate__animated animate__fadeIn animate_faster\"\r\n          >\r\n                <Sidebar/>\r\n                     <main>\r\n                        {\r\n                        (active)\r\n                         ?(<NoteScreen/>)\r\n                         :(<NothingSelected/>)\r\n                        }                       \r\n                     </main>  \r\n          </div>\r\n     )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startLoginEmailPassword, startGoogleLogin } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const {loading}=useSelector(state=>state.ui); \r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: 'mail@gmail.com', \r\n    password: \"123456\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin=()=>{\r\n    dispatch(startGoogleLogin ());\r\n  }\r\n  return (\r\n    <>\r\n      <h3 className=\"auth_title\"> Login </h3>\r\n\r\n      <form \r\n        onSubmit={handleLogin}\r\n        className=\"animate__animated animate__fadeIn animate_faster\"\r\n\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button \r\n          type=\"submit\" \r\n          className=\"btn btn-primary btn-block\"\r\n          disabled={loading}\r\n        >Login</button>\r\n\r\n        <hr />\r\n\r\n        <div>\r\n          <p>Login with social networks</p>\r\n\r\n          <div \r\n            className=\"google-btn\"\r\n            onClick={handleGoogleLogin}          \r\n          >\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n\r\n          <Link className=\"link mt-5\" to=\"/auth/register\">            \r\n            Create new account\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {msgError} = useSelector( state => state.ui ); \r\n  console.log(msgError);\r\n\r\n  \r\n  const [formValues, handleInputChange] = useForm({\r\n    name:'Paola', \r\n    email: 'mail@gmail.com', \r\n    password: '123456',\r\n    password2: '123456'\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n\r\nconst handleRegister = (e)=> {\r\n  e.preventDefault(); \r\n  if(isFormValid()){\r\n    dispatch(startRegisterWithEmailPasswordName(email, password, name)); \r\n    //removeError(); \r\n  }\r\n}\r\n\r\nconst isFormValid = ()=>{\r\n\r\n  if(name.trim().length === 0){\r\n    dispatch(setError('Name is required')); \r\n    return false; \r\n  } else if(!validator.isEmail(email)){\r\n    dispatch(setError('Email is not valid')); \r\n    return false; \r\n  } else if(password!==password2 || password.length < 5){\r\n    dispatch(setError('Password should be at least 6 character and match each other')); \r\n    return false; \r\n  }\r\n  //remove del error\r\n  dispatch(removeError()); \r\n  return true; \r\n}\r\n\r\n     return (\r\n<>\r\n         <h3> Register </h3>\r\n\r\n         <form \r\n           onSubmit={handleRegister}\r\n           className=\"animate__animated animate__fadeIn animate_faster\"\r\n         >\r\n           {\r\n             msgError &&\r\n           (\r\n             <div className=\"auth__alert-error\">\r\n              {msgError}\r\n             </div>\r\n           )\r\n           }\r\n         <input \r\n           type=\"text\" \r\n           placeholder=\"Name\" \r\n           name=\"name\"\r\n           className=\"auth__input\" \r\n           autoComplete=\"off\"\r\n           value={name}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n           <input \r\n           type=\"text\" \r\n           placeholder=\"Email\" \r\n           name=\"email\"\r\n           className=\"auth__input\" \r\n           autoComplete=\"off\"\r\n           value={email}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n           <input \r\n           type=\"password\" placeholder=\"Password\" name=\"password\" \r\n           className=\"auth__input\"\r\n           autoComplete=\"off\"\r\n           value={password}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n          <input \r\n           type=\"password\" placeholder=\"Confirm\" name=\"password2\" \r\n           className=\"auth__input\"\r\n           autoComplete=\"off\"\r\n           value={password2}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n           <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-block mb-5\"\r\n            > Register</button>\r\n\r\n           <hr />\r\n\r\n           <div>\r\n             <Link\r\n             className=\"link mt-5\"\r\n             to=\"/auth/login\"\r\n             > Already registered?</Link>\r\n           </div>\r\n         </form>\r\n       </>\r\n     )\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          {/*\r\n               //router ... no va.. \r\n               path= \"/auth/login\"\r\n               componente= {loginScreen}\r\n\r\n               path= \"/auth/register\"\r\n               componente= {RegisterScreen}\r\n\r\n               // Redirect to path= \"/auth/login\"\r\n               componente= {LoginScreen}\r\n               */}\r\n\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/register\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'; \r\nimport PropTypes from 'prop-types'; \r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n     isAuthenticated, \r\n     component: Component, \r\n     ...rest \r\n}) => {\r\n     \r\n     \r\n     return (\r\n       <Route {...rest}\r\n          component={(props)=>(\r\n            (isAuthenticated)\r\n              ? (<Component {...props}/>)\r\n              : (<Redirect to=\"/auth/login\"/>)\r\n          )}\r\n       />           \r\n     )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes={\r\n     isAuthenticated: PropTypes.bool.isRequired, \r\n     component: PropTypes.func.isRequired    \r\n}","import React from 'react'; \r\nimport PropTypes from 'prop-types'; \r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n     isAuthenticated, \r\n     component: Component, \r\n     ...rest \r\n}) => {\r\n    \r\n     return (\r\n          <Route {...rest}\r\n               component={(props)=>(\r\n                    (!isAuthenticated)\r\n                         ? (<Component {...props}/>)\r\n                         : (<Redirect to=\"/\"/>)\r\n\r\n               )}\r\n          />                     \r\n     )\r\n}\r\n\r\nPublicRoute.propTypes={\r\n     isAuthenticated: PropTypes.bool.isRequired, \r\n     component: PropTypes.func.isRequired    \r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch,  Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {firebase} from '../firebase/firebase-config'; \r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const [checking, setChecking] = useState(true); \r\n   const [isLoggedIn, setIsLoggedIn] = useState(false); \r\n\r\n  useEffect(() => {\r\n \r\n    firebase.auth().onAuthStateChanged((user)=>{\r\n      \r\n      if(user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true); \r\n       \r\n        dispatch(startLoadingNotes(user.uid)); \r\n\r\n      }else {\r\n        setIsLoggedIn(false);\r\n      }\r\n\r\n      setChecking(false); \r\n    }); \r\n  }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n  if(checking){\r\n    return(\r\n      <h1>Wait...</h1>\r\n    )\r\n  }\r\n    \r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n               path=\"/auth\" \r\n               component={AuthRouter}\r\n               isAuthenticated={isLoggedIn}\r\n           />                     \r\n          <PrivateRoute\r\n            exact path=\"/\"\r\n            component={JournalScreen}\r\n            isAuthenticated={isLoggedIn}\r\n           />\r\n          <Redirect to=\"/auth/login\"/>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const JournalApp = () => {\r\n     return (\r\n          <Provider store={store}>\r\n              <AppRouter/> \r\n          </Provider>\r\n     )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'; \n\nReactDOM.render(\n \n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}